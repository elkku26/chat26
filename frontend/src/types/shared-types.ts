/*
 Generated by typeshare 1.13.2
*/

export interface ChatMessage {
	id: string;
	time: string;
	content: string;
	sender_id: string;
}

export interface ForwardChatPayload {
	chat_message: ChatMessage;
}

export interface JoinRoomPayload {
	user_id: string;
}

export interface SendChatPayload {
	chat_message: ChatMessage;
}

export enum Status {
	Online = "Online",
	Offline = "Offline",
}

export interface User {
	id: string;
	created_at: string;
	username: string;
	status: Status;
}

export enum WSClientMessageKind {
	JoinRoom = "JoinRoom",
	SendChat = "SendChat",
}

export interface WSClientMessage {
	id: string;
	kind: WSClientMessageKind;
	payload: any;
}

export enum WSServerMessageKind {
	Ping = "Ping",
	ForwardChat = "ForwardChat",
}

export interface WSServerMessage {
	id: string;
	kind: WSServerMessageKind;
	payload: any;
}

